
#include "../ClassImplements/{{FILE}}.hpp"

// Constructor
{{FILE}}::{{FILE}}()
{
	std::cout << "{{FILE}}:\tcreating object\n";
}

// Copy constructor
{{FILE}}::{{FILE}}(const {{FILE}}& other);
{
	std::cout << "{{FILE}}:\t" << this->_name << ":\tcopying object\n";
	*this = other;
}

// Copy assignment operator overload
{{FILE}}& {{FILE}}::operator = (const {{FILE}}& other)
{
	std::cout << "{{FILE}}:\t" << this->_name << ":\tcopying object (assignment)\n";
	if (this != &other)
	{
		\*this->_=other._*\
	}
	return (*this);
}

// Destructor
{{FILE}}::~{{FILE}}(void)
{
	std::cout << "{{FILE}}:\t" << this->_name << ":\tdestroying object\n";
}
